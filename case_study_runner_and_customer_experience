--1. How many runners signed up for each 1 week period? (i.e. week starts 2021-01-01)

SELECT
  date_trunc('week', registration_date) AS week_start,
  COUNT(*) AS runners_signed_up
FROM runners
WHERE registration_date >= '2021-01-01'
GROUP BY week_start
ORDER BY week_start;

--2. What was the average time in minutes it took for each runner to arrive at the Pizza Runner HQ to pickup the order?

WITH timeee AS (SELECT DISTINCT co.order_id, co.customer_id, co.pizza_id, co.order_time, ro.pickup_time,
	EXTRACT(EPOCH FROM (ro.pickup_time::timestamp - co.order_time::timestamp))/60 AS time_in_minutes
FROM customer_orders co
JOIN runner_orders ro
	ON co.order_id = ro.order_id
WHERE ro.cancellation IS NULL)

SELECT AVG(time_in_minutes)
FROM timeee;

--3. Is there any relationship between the number of pizzas and how long the order takes to prepare?

SELECT DISTINCT co.order_id, COUNT(co.pizza_id) AS pizza_count, co.order_time, ro.pickup_time,
	EXTRACT(EPOCH FROM (ro.pickup_time::timestamp - co.order_time::timestamp))/60 AS time_in_minutes
FROM customer_orders co
JOIN runner_orders ro
	ON co.order_id = ro.order_id
WHERE ro.cancellation IS NULL
GROUP BY 1,3,4;
                 
--4. What was the average distance travelled for each customer?

SELECT
  co.customer_id, 
  AVG(CAST(regexp_replace(ro.distance, '[^0-9\.]', '', 'g') AS FLOAT)) OVER (PARTITION BY co.customer_id) AS avg_distance
FROM runner_orders ro 
JOIN customer_orders co
  ON co.order_id = ro.order_id
WHERE ro.cancellation IS NULL
GROUP BY 1,ro.distance
ORDER BY co.customer_id;

--5. What was the difference between the longest and shortest delivery times for all orders?

SELECT MAX(distance) - MIN(distance) as difference
FROM temp_runner_orders
WHERE cancellation IS NULL;

--6. What was the average speed for each runner for each delivery and do you notice any trend for these values?

SELECT runner_id, distance, duration, distance * 60 / duration as km_per_hour, AVG(distance * 60 / duration) OVER (PARTITION BY runner_id) as avg_km_per_hour
FROM temp_runner_orders
WHERE cancellation IS NULL;

--7. What is the successful delivery percentage for each runner?

SELECT
  ro.runner_id,
  COUNT(ro.order_id) AS total_deliveries,
  COUNT(CASE WHEN ro.cancellation IS NULL OR ro.cancellation = '' THEN 1 END) AS successful_deliveries,
  (COUNT(CASE WHEN ro.cancellation IS NULL OR ro.cancellation = '' THEN 1 END) * 100.0) / COUNT(ro.order_id) AS successful_delivery_percentage
FROM temp_runner_orders ro
GROUP BY ro.runner_id
ORDER BY ro.runner_id;
